<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<!-- Method Documentation URL: https://www.drupal.org/project/rest_server -->
<template name="createNode" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="type" description="Type of the node."/>
    <parameter name="title" description="Title of the node."/>
    <parameter name="comment"
               description="Boolean value to set comments. Possible values are 1 or 0."/>
    <parameter name="nodeBody" description="JSON object which containing the body of the node."/>
    <parameter name="customFields"
               description="JSON Object which containing custom field labels as keys and field values a key values."/>
    <sequence>
        <property name="uri.var.type" expression="$func:type"/>
        <property name="uri.var.title" expression="$func:title"/>
        <property name="uri.var.comment" expression="$func:comment"/>
        <property name="uri.var.nodeBody" expression="$func:nodeBody"/>
        <property name="uri.var.customFields" expression="$func:customFields"/>
        <payloadFactory media-type="json">
            <format>
                {
                "node":{
                "type":"$1",
                "title":"$2"
                }
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.type')"/>
                <arg expression="get-property('uri.var.title')"/>
            </args>
        </payloadFactory>
        <script language="js">
            <![CDATA[
           var payload = mc.getPayloadJSON();
           var comment=mc.getProperty('uri.var.comment');
           var nodeBody=mc.getProperty('uri.var.nodeBody');
           var customFields=mc.getProperty('uri.var.customFields');
           if (comment != null && comment != "") {
              payload.node.comment=comment;
           } 
           if (nodeBody != null && nodeBody != "") {
              payload.node.body=eval ("(" + nodeBody + ")");
           }
           if (customFields != null && customFields != ""){
              customFields= eval ("(" + customFields + ")");
              for (var key in customFields) {
                 if (customFields.hasOwnProperty(key)) {
                    var undObject={};
                    var undArray=[];
                    var customObject={};
                    undObject["value"]=customFields[key];
                    undArray[0]=undObject;
                    customObject["und"]=undArray;
                    payload["node"][key] = customObject;
                 }
              }
           } 
           mc.setPayloadJSON(payload);
        ]]>
        </script>
        <call>
            <endpoint>
                <http method="post" uri-template="{+uri.var.apiUrl}/node{+uri.var.responseType}"/>
            </endpoint>
        </call>
        <!-- Remove custom headers from the API response -->
        <header name="Cache-Control" action="remove" scope="transport"/>
        <header name="Vary" action="remove" scope="transport"/>
        <header name="X-Content-Type-Options" action="remove" scope="transport"/>
        <header name="ETag" action="remove" scope="transport"/>
    </sequence>
</template>
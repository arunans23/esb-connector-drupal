<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<!-- Method Documentation URL: https://www.drupal.org/project/rest_server -->
<template name="createComment" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="nodeId" description="Id of the node."/>
    <parameter name="commentBody" description="Body of the node."/>
    <parameter name="parentId" description="Id of the parent comment."/>
    <parameter name="language" description="Language code for your field."/>
    <parameter name="subject" description="Subject of the comments."/>
    <parameter name="customFields"
               description="JSON Object which containing custom field labels as keys and field values a key values."/>
    <sequence>
        <property name="uri.var.nodeId" expression="$func:nodeId"/>
        <property name="uri.var.commentBody" expression="$func:commentBody"/>
        <property name="uri.var.parentId" expression="$func:parentId"/>
        <property name="uri.var.language" expression="$func:language"/>
        <property name="uri.var.subject" expression="$func:subject"/>
        <property name="uri.var.customFields" expression="$func:customFields"/>
        <payloadFactory media-type="json">
            <format>
                {
                "nid": "$1"
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.nodeId')"/>
            </args>
        </payloadFactory>
        <script language="js">
            <![CDATA[
            var commentBody=mc.getProperty('uri.var.commentBody');
            var parentId = mc.getProperty('uri.var.parentId');
            var language = mc.getProperty('uri.var.language');
            var subject = mc.getProperty('uri.var.subject');
            var customFields = mc.getProperty('uri.var.customFields');
            var payload=mc.getPayloadJSON();
            payload.comment_body=eval ("(" + commentBody + ")");
            if (parentId != null && parentId != ""){
               payload["pid"] = parentId;
            }
            if (language != null && language != ""){
               payload["language"]= language;
            }
            if (subject != null && subject != ""){
               payload["subject"] = subject;
            }
            if (customFields != null && customFields != ""){
               customFields= eval ("(" + customFields + ")");
                for (var key in customFields) {
                    if (customFields.hasOwnProperty(key)) {
                       var undObject={};
                       var undArray=[];
                       var customObject={};
                       undObject["value"]=customFields[key];
                       undArray[0]=undObject;
                       customObject["und"]=undArray;
                       payload[key] = customObject;
                    }
                }
            }
           mc.setPayloadJSON(payload);
         ]]>
        </script>
        <call>
            <endpoint>
                <http method="post"
                      uri-template="{+uri.var.apiUrl}/comment{+uri.var.responseType}"/>
            </endpoint>
        </call>
        <!-- Remove custom headers from the API response -->
        <header name="Cache-Control" action="remove" scope="transport"/>
        <header name="Vary" action="remove" scope="transport"/>
        <header name="X-Content-Type-Options" action="remove" scope="transport"/>
        <header name="ETag" action="remove" scope="transport"/>
    </sequence>
</template>
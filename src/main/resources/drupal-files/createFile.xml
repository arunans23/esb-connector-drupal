<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<!-- Method Documentation URL: https://www.drupal.org/project/rest_server -->
<template name="createFile" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="fileName"
               description="Name of the file with no path components. Ex: image.png"/>
    <parameter name="file" description="The base 64 encoded string of the image."/>
    <parameter name="status"
               description="Represents the bitmapped field indicating the status of the file. Temporary (0) or permanent (1)."/>
    <sequence>
        <property name="uri.var.fileName" expression="$func:fileName"/>
        <property name="uri.var.file" expression="$func:file"/>
        <property name="uri.var.status" expression="$func:status"/>
        <payloadFactory media-type="json">
            <format>
                {
                "filename":"$1",
                "file":"$2"
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.fileName')"/>
                <arg expression="get-property('uri.var.file')"/>
            </args>
        </payloadFactory>
        <script language="js">
            <![CDATA[
            // Setting optional parameters to the payload.
            var status = mc.getProperty('uri.var.status');
            var payload = mc.getPayloadJSON();
            if (status != null && status != "") {
               payload.status = status;
            }
            mc.setPayloadJSON(payload);   
         ]]>
        </script>
        <call>
            <endpoint>
                <http method="post" uri-template="{+uri.var.apiUrl}/file{+uri.var.responseType}"/>
            </endpoint>
        </call>
        <!-- Remove custom headers from the API response -->
        <header name="Cache-Control" action="remove" scope="transport"/>
        <header name="Vary" action="remove" scope="transport"/>
        <header name="X-Content-Type-Options" action="remove" scope="transport"/>
        <header name="ETag" action="remove" scope="transport"/>
    </sequence>
</template>
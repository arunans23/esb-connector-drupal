<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<proxy xmlns="http://ws.apache.org/ns/synapse" name="drupal" transports="https,http"
       statistics="disable" trace="disable" startOnLoad="true">
    <target>
        <inSequence onError="faultHandlerSeq">
            <property name="responseType" expression="json-eval($.responseType)"/>
            <property name="apiUrl" expression="json-eval($.apiUrl)"/>
            <property name="userName" expression="json-eval($.userName)"/>
            <property name="password" expression="json-eval($.password)"/>
            <property name="title" expression="json-eval($.title)"/>
            <property name="nodeBody" expression="json-eval($.nodeBody)"/>
            <property name="customFields" expression="json-eval($.customFields)"/>
            <property name="comment" expression="json-eval($.comment)"/>
            <property name="type" expression="json-eval($.type)"/>
            <property name="nodeId" expression="json-eval($.nodeId)"/>
            <property name="page" expression="json-eval($.page)"/>
            <property name="pageSize" expression="json-eval($.pageSize)"/>
            <property name="parameters" expression="json-eval($.parameters)"/>
            <property name="fields" expression="json-eval($.fields)"/>
            <property name="parentId" expression="json-eval($.parentId)"/>
            <property name="commentBody" expression="json-eval($.commentBody)"/>
            <property name="subject" expression="json-eval($.subject)"/>
            <property name="language" expression="json-eval($.language)"/>
            <property name="commentId" expression="json-eval($.commentId)"/>
            <property name="status" expression="json-eval($.status)"/>
            <property name="file" expression="json-eval($.file)"/>
            <property name="fileName" expression="json-eval($.fileName)"/>
            <property name="fileId" expression="json-eval($.fileId)"/>
            <property name="userId" expression="json-eval($.userId)"/>
            <drupal.init>
                <responseType>{$ctx:responseType}</responseType>
                <apiUrl>{$ctx:apiUrl}</apiUrl>
                <userName>{$ctx:userName}</userName>
                <password>{$ctx:password}</password>
            </drupal.init>
            <switch source="get-property('transport', 'Action')">
                <case regex="urn:createNode">
                    <drupal.createNode>
                        <title>{$ctx:title}</title>
                        <nodeBody>{$ctx:nodeBody}</nodeBody>
                        <customFields>{$ctx:customFields}</customFields>
                        <comment>{$ctx:comment}</comment>
                        <type>{$ctx:type}</type>
                    </drupal.createNode>
                </case>
                <case regex="urn:getNode">
                    <drupal.getNode>
                        <nodeId>{$ctx:nodeId}</nodeId>
                    </drupal.getNode>
                </case>
                <case regex="urn:listNodes">
                    <drupal.listNodes>
                        <page>{$ctx:page}</page>
                        <pageSize>{$ctx:pageSize}</pageSize>
                        <parameters>{$ctx:parameters}</parameters>
                        <fields>{$ctx:fields}</fields>
                    </drupal.listNodes>
                </case>
                <case regex="urn:updateNode">
                    <drupal.updateNode>
                        <title>{$ctx:title}</title>
                        <nodeId>{$ctx:nodeId}</nodeId>
                        <nodeBody>{$ctx:nodeBody}</nodeBody>
                        <customFields>{$ctx:customFields}</customFields>
                        <comment>{$ctx:comment}</comment>
                    </drupal.updateNode>
                </case>
                <case regex="urn:listNodeAttachments">
                    <drupal.listNodeAttachments>
                        <nodeId>{$ctx:nodeId}</nodeId>
                    </drupal.listNodeAttachments>
                </case>
                <case regex="urn:createComment">
                    <drupal.createComment>
                        <parentId>{$ctx:parentId}</parentId>
                        <commentBody>{$ctx:commentBody}</commentBody>
                        <nodeId>{$ctx:nodeId}</nodeId>
                        <customFields>{$ctx:customFields}</customFields>
                        <subject>{$ctx:subject}</subject>
                        <language>{$ctx:language}</language>
                    </drupal.createComment>
                </case>
                <case regex="urn:getComment">
                    <drupal.getComment>
                        <commentId>{$ctx:commentId}</commentId>
                    </drupal.getComment>
                </case>
                <case regex="urn:listComments">
                    <drupal.listComments>
                        <page>{$ctx:page}</page>
                        <pageSize>{$ctx:pageSize}</pageSize>
                        <parameters>{$ctx:parameters}</parameters>
                        <fields>{$ctx:fields}</fields>
                    </drupal.listComments>
                </case>
                <case regex="urn:createFile">
                    <drupal.createFile>
                        <status>{$ctx:status}</status>
                        <file>{$ctx:file}</file>
                        <fileName>{$ctx:fileName}</fileName>
                    </drupal.createFile>
                </case>
                <case regex="urn:getFile">
                    <drupal.getFile>
                        <fileId>{$ctx:fileId}</fileId>
                    </drupal.getFile>
                </case>
                <case regex="urn:listFiles">
                    <drupal.listFiles>
                        <page>{$ctx:page}</page>
                        <pageSize>{$ctx:pageSize}</pageSize>
                        <parameters>{$ctx:parameters}</parameters>
                        <fields>{$ctx:fields}</fields>
                    </drupal.listFiles>
                </case>
                <case regex="urn:listUsers">
                    <drupal.listUsers>
                        <page>{$ctx:page}</page>
                        <pageSize>{$ctx:pageSize}</pageSize>
                        <parameters>{$ctx:parameters}</parameters>
                        <fields>{$ctx:fields}</fields>
                    </drupal.listUsers>
                </case>
                <case regex="urn:getUser">
                    <drupal.getUser>
                        <userId>{$ctx:userId}</userId>
                    </drupal.getUser>
                </case>
            </switch>
            <respond/>
        </inSequence>
        <outSequence>
            <log/>
            <send/>
        </outSequence>
    </target>
    <description/>
</proxy>
                                